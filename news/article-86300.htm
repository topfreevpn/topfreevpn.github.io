<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://topfreevpn.github.io/news/article-86300.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Java 线程安全与锁</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta name="description" content="多线程内存模型  线程私有栈内存  每个线程 私有的内存区域   进程公有堆内存  同一个进程 共有的内存区域    为什么会有线程安全问题？  多个线程同时具有对同一资源的操作权限，又发生了同时对该" />
    
    <!-- Favicon -->
    <link href="/assets/website/img/v2rayclashfree/favicon.ico" rel="icon">

    <meta name="author" content="最佳免费VPN 机场订阅节点中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://topfreevpn.github.io/news/article-86300.htm" />
    <meta property="og:site_name" content="最佳免费VPN 机场订阅节点中文网" />
    <meta property="og:title" content="Java 线程安全与锁" />
    <meta property="og:image" content="https://topfreevpn.github.io/uploads/20240605/f2cd7416ad3b83b0e1cc9a28f4cda8d1.webp" />
        <meta property="og:release_date" content="2025-04-01T09:50:00" />
    <meta property="og:updated_time" content="2025-04-01T09:50:00" />
        <meta property="og:description" content="多线程内存模型  线程私有栈内存  每个线程 私有的内存区域   进程公有堆内存  同一个进程 共有的内存区域    为什么会有线程安全问题？  多个线程同时具有对同一资源的操作权限，又发生了同时对该" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java 线程安全与锁">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Styles -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;1,400&display=swap" rel="stylesheet">
    <link href="/assets/website/css/v2rayclashfree/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayclashfree/fontawesome-all.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayclashfree/swiper.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayclashfree/styles.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Z43TVP4HME"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Z43TVP4HME');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation -->
    <nav id="navbarExample" class="navbar navbar-expand-lg fixed-top navbar-light" aria-label="Main navigation">
        <div class="container">
            <a href="/" class="logo">
                        <span>最佳免费VPN</span>
                        </a>
            <!-- Text Logo - Use this if you don't have a graphic logo -->
            <!-- <a class="navbar-brand logo-text" href="index.html">Ioniq</a> -->
            <button class="navbar-toggler p-0 border-0" type="button" id="navbarSideCollapse" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse offcanvas-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav ms-auto navbar-nav-scroll">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                    </ul>
            </div> <!-- end of navbar-collapse -->
        </div> <!-- end of container -->
    </nav> <!-- end of navbar -->
    <!-- end of navigation -->
    <!-- Header -->
    <!-- Header -->
    <header class="ex-header">
        <div class="container">
            <div class="row">
                <div class="col-xl-10 offset-xl-1">
                    <h1>Java 线程安全与锁</h1>
                    <p>
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div> <!-- end of col -->
            </div> <!-- end of row -->
        </div> <!-- end of container -->
    </header> <!-- end of ex-header -->
    <!-- end of header -->
    <!-- Details 1 -->
    <div id="details" class="basic-1 bg-gray">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				</h1> <h2 id="多线程内存模型">多线程内存模型</h2> <ul> <li>线程私有栈内存 <ul> <li>每个线程 私有的内存区域</li> </ul> </li> <li>进程公有堆内存 <ul> <li>同一个进程 共有的内存区域</li> </ul> </li> </ul> <h2 id="为什么会有线程安全问题">为什么会有线程安全问题？</h2> <ul> <li>多个线程同时具有对同一资源的操作权限，又发生了同时对该资源进行读取、写入的情况，那么就会出现重复操作的情况</li> </ul> <h2 id="如何解决线程安全问题呢-加锁">如何解决线程安全问题呢？ 加锁</h2> <h3 id="什么是锁">什么是锁？</h3> <p>锁就是对于操作资源的一种权限</p> <h3 id="锁可以做什么">锁可以做什么？</h3> <p>对于一个资源加锁后，每次只能有一个线程对该资源进行操作，当该线程操作结束后，才会解锁。<br /> 解锁之后，所有的线程获得竞争此资源的机会。</p> <h3 id="什么情况下需要加锁">什么情况下需要加锁?</h3> <ul> <li>读读 不需要加锁</li> <li>写写 需要加锁</li> <li>读写 需要加锁</li> </ul> <h2 id="加锁的两种方式synchronized关键字与lock对象">加锁的两种方式（synchronized关键字与Lock对象）</h2> <h3 id="第一种synchronized关键字">第一种：synchronized关键字</h3> <ul> <li> <p>方法前加synchronized关键字</p> <ul> <li>功能：线程进入用synchronized声明的方法时就上锁，方法执行完自动解锁，锁的是当前类的对象</li> <li>调用synchronized声明的方法一定是排队运行的</li> <li>当A线程 调用object对象的synchronized声明的X方法时 <ul> <li>B线程可以调用其他非synchronized声明的方法</li> <li>B线程不能调用其他synchronized声明的非X方法</li> </ul> </li> </ul> </li> <li> <p>synchronized锁重入</p> <ul> <li>锁重入的概念：自己可以重复获得自己的内部锁。即synchronized声明的方法，可以调用本对象的其他synchronized方法。</li> <li>锁重入支持继承的环境，即子类的synchronized方法也可以调用父类的synchronized方法。</li> </ul> </li> <li> <p>synchronized同步代码块</p> <ul> <li> <p>synchronized关键字与synchronized代码块的区别</p> <ul> <li>synchronized声明的方法是将当前对象作为锁</li> <li>synchronized代码块是将任意对象作为锁</li> </ul> </li> <li> <p>当两个线程访问同一个对象的synchronized代码块时，只有一个线程可以得到执行，另一个线程只能等待当前线程执行完才能执行。</p> <ul> <li>一半同步，一半异步 <ul> <li>不在synchronized代码块中就是异步执行，在synchronized代码块中就是同步执行</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>下面对“一半同步，一半异步”进行代码验证</p> <ul> <li>创建项目ltl0002 ,文件Task的代码如下：</li> </ul> <pre><code class="language-java">package ltl0002;  public class Task {      public void doTask(){         for (int i = 0; i &lt; 100; i++) {             System.out.println("no synchronized ThreadName = " + Thread.currentThread().getName() + " i = " + (i+1));         }         synchronized (this){             for (int i = 0; i &lt; 100; i++) {                 System.out.println("synchronized ThreadName = " + Thread.currentThread().getName() + " i = " + (i+1));             }         }              } }</code></pre> <ul> <li>两个线程类代码</li> </ul> <pre><code class="language-java">package ltl0002;  public class MyThread1 implements Runnable{      private Task task = new Task();      public MyThread1(Task task){         this.task = task;     }      @Override     public void run() {          task.doTask();     } }</code></pre> <pre><code class="language-java">package ltl0002;  public class MyThread2 implements Runnable{      private Task task = new Task();      public MyThread2(Task task){         this.task = task;     }      @Override     public void run() {          task.doTask();     } }</code></pre> <p>文件Run.java代码如下：</p> <pre><code class="language-java">package ltl0002;  public class Run {     public static void main(String[] args) {         Task task = new Task();         MyThread1 myThread1 = new MyThread1(task);         MyThread2 myThread2 = new MyThread2(task);         Thread tr1 = new Thread(myThread1);         Thread tr2 = new Thread(myThread2);         tr1.start();         tr2.start();     }  }</code></pre> <p>程序运行结果如图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/522938c98702bd636c2592ad73bcbcb8.jpg" alt="Java 线程安全与锁"></p> <p>进入synchronized代码块之后，排队运行，运行结果如图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/208c17e179f28acc676e15fad1c7d849.jpg" alt="Java 线程安全与锁"></p> <p>在第一张图我们可以看到，线程0 和 1交叉输出，说明是异步进行，而在第二张图可以看出线程0运行完之后，线程1才运行，说明它们是同步运行，验证完毕。</p> <ul> <li>现有三个线程，线程一对num进行修改，线程二三对num进行读取，如何可以实现，线程一与线程二三同步执行，而线程二三异步执行呢？<br /> 现在创建项目ltl0003进行测试，Number文件代码如下</li> </ul> <pre><code class="language-java">package ltl0003; /**  * @author liTianLu  * @Date 2022/4/23 15:53  * @purpose 成员变量有int num,以及get set方法  */ public class Number {   private int num;   private boolean change = false;    public int getNum() {     return num;   }    public void setNum(int num) {     this.num = num;   }   public boolean isChangeing(){     return change;   }    public void setChange(boolean change) {     this.change = change;   } }</code></pre> <p>两个线程类的代码如下：</p> <pre><code class="language-java">package ltl0003; /**  * @author liTianLu  * @Date 2022/4/23 15:36  * @purpose 更改num的值  */ public class MyThread01 implements Runnable{   static int num = 0;   Number number;   public MyThread01(Number num ){     this.number = num ;   }   @Override   public void run() {     synchronized (this){       number.setChange(true);       for (int i = 0; i &lt; 10000; i++) {         number.setNum(num++);       }       number.setChange(false);     }   } }</code></pre> <pre><code class="language-java">package ltl0003;  import static java.lang.Thread.sleep; /**  * @author liTianLu  * @Date 2022/4/23 15:35  * @purpose 读取num的值  */ public class MyThread02 implements Runnable{   Number number;    public MyThread02(Number num ){     this.number = num ;   }    @Override   public void run() {     for (int i = 0; i &lt; 1000 ; i++) {       //如果number正在更改,就休眠1ms       while(number.isChangeing()){         try {           sleep(1);         } catch (InterruptedException e) {           e.printStackTrace();         }       }       System.out.println(Thread.currentThread().getName()+"的输出为： num = " + number.getNum());     }   }  }</code></pre> <p>主函数文件Run代码如下：</p> <pre><code class="language-java">package ltl0003; /**  * @author liTianLu  * @Date 2022/4/23 15:15  * @purpose 解决锁问题 线程一对num进行修改，线程二三对num进行读取，此代码要实现：线程一与线程二三同步执行，而线程二三异步执行。  */ public class Run {   public static void main(String[] args) {     Number number = new Number();     number.setNum(0);     MyThread01 myThread01 = new MyThread01(number);     MyThread02 myThread02 = new MyThread02(number);     Thread tr1 = new Thread(myThread01);     Thread tr2 = new Thread(myThread02);     Thread tr3 = new Thread(myThread02);     tr1.start();     tr2.start();     tr3.start();   } }</code></pre> <p>实验结果如图所示</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/56d4b608cb936a6b26d752e1259ec2ac.jpg" alt="Java 线程安全与锁"></p> <p>我们发现，线程2/3执行的时候，线程1已经执行完毕，且线程2、3异步进行。</p> <h3 id="第二种lock对象的使用">第二种：Lock对象的使用</h3> <ul> <li>ReentrantLock类可以达到与synchronized同样的效果。</li> <li>用法：</li> </ul> <pre><code class="language-java">ReentrantLock lock = new ReentrantLock ();  lock.lock();//加锁 lock.unlock();//解锁          //使用try catch finally 可以确保finally 中的代码执行，在finally中解锁 try{     while(true){         lock.lock ();         //操作代码     } }catch (Exception e) {     e.printStackTrace(); }finally {     lock.unlock (); }</code></pre> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-86298.htm">vue将方法挂载到原型上</a></p>
                                        <p>下一个：<a href="/news/article-87012.htm">免费宠物救助站深圳（深圳 宠物救助）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-29-free-node-subscribe.htm" title="最佳免费VPN | 3月29日23M/S|免费VPN/Clash/Shadowrocket/V2ray/SSR免费节点订阅分享">最佳免费VPN | 3月29日23M/S|免费VPN/Clash/Shadowrocket/V2ray/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-77866.htm" title="动物疫苗接种方法及注意事项有哪些呢视频 动物疫苗接种方法及注意事项有哪些呢视频讲解">动物疫苗接种方法及注意事项有哪些呢视频 动物疫苗接种方法及注意事项有哪些呢视频讲解</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-1-clash-v2ray-ss-ssr.htm" title="最佳免费VPN | 4月1日18.2M/S|免费VPN/SSR/Clash/Shadowrocket/V2ray免费节点订阅分享">最佳免费VPN | 4月1日18.2M/S|免费VPN/SSR/Clash/Shadowrocket/V2ray免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-73130.htm" title="猫咪打疫苗打几针多少钱啊（猫咪打疫苗多少钱一针?）">猫咪打疫苗打几针多少钱啊（猫咪打疫苗多少钱一针?）</a></li>
                        <li class="py-2"><a href="/news/article-71806.htm" title="上海宠物领养中心真假鉴定电话（上海宠物领养救助站是真的吗）">上海宠物领养中心真假鉴定电话（上海宠物领养救助站是真的吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-16-free-v2ray-subscribe.htm" title="最佳免费VPN | 3月16日22.8M/S|免费VPN/Clash/Shadowrocket/SSR/V2ray免费节点订阅分享">最佳免费VPN | 3月16日22.8M/S|免费VPN/Clash/Shadowrocket/SSR/V2ray免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-88471.htm" title="宠物粮食批发市场地址电话号码查询（附近宠物粮食店）">宠物粮食批发市场地址电话号码查询（附近宠物粮食店）</a></li>
                        <li class="py-2"><a href="/news/article-68522.htm" title="宠物寄养协议模板（宠物寄养协议样本简单）">宠物寄养协议模板（宠物寄养协议样本简单）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-free-v2ray.htm" title="最佳免费VPN | 3月13日20M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点订阅分享">最佳免费VPN | 3月13日20M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-24-free-node-subscribe-links.htm" title="最佳免费VPN | 3月24日21.7M/S|免费VPN/Shadowrocket/V2ray/SSR/Clash免费节点订阅分享">最佳免费VPN | 3月24日21.7M/S|免费VPN/Shadowrocket/V2ray/SSR/Clash免费节点订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div> <!-- end of container -->
    </div> <!-- end of basic-1 -->
    <!-- end of details 1 -->
        <!-- Copyright -->
    <div class="copyright">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p class="p-small">
                        最佳免费VPN 机场订阅节点中文网 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div> <!-- end of col -->
            </div> <!-- enf of row -->
        </div> <!-- end of container -->
    </div> <!-- end of copyright -->
    <!-- end of copyright -->
    <!-- Back To Top Button -->
    <button onclick="topFunction()" id="myBtn">
        <img src="/assets/website/img/v2rayclashfree/up-arrow.png" alt="alternative">
    </button>
    <!-- end of back to top button -->
    <!-- Scripts -->
    <script src="/assets/website/js/frontend/v2rayclashfree/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashfree/bootstrap.min.js"></script> <!-- Bootstrap framework -->
    <script src="/assets/website/js/frontend/v2rayclashfree/swiper.min.js"></script> <!-- Swiper for image and text sliders -->
    <script src="/assets/website/js/frontend/v2rayclashfree/purecounter.min.js"></script> <!-- Purecounter counter for statistics numbers -->
    <script src="/assets/website/js/frontend/v2rayclashfree/replaceme.min.js"></script> <!-- ReplaceMe for rotating text -->
    <script src="/assets/website/js/frontend/v2rayclashfree/scripts.js"></script> <!-- Custom scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>